[{"D:\\crudOperations\\frontend-apis\\src\\index.js":"1","D:\\crudOperations\\frontend-apis\\src\\App.js":"2","D:\\crudOperations\\frontend-apis\\src\\table\\table.js":"3","D:\\crudOperations\\frontend-apis\\src\\login\\login.js":"4","D:\\crudOperations\\frontend-apis\\src\\quiz\\quizData.js":"5","D:\\crudOperations\\frontend-apis\\src\\quiz\\QuizRecord.js":"6","D:\\crudOperations\\frontend-apis\\src\\quiz\\SecondQuiz.js":"7","D:\\crudOperations\\frontend-apis\\src\\quiz\\StartQuiz.js":"8","D:\\crudOperations\\frontend-apis\\src\\pages\\Page.js":"9","D:\\crudOperations\\frontend-apis\\src\\pages\\PagesData.js":"10","D:\\crudOperations\\frontend-apis\\src\\initial-elements.js":"11","D:\\crudOperations\\frontend-apis\\src\\OverviewFlow.js":"12","D:\\crudOperations\\frontend-apis\\src\\CustomNode.jsx":"13"},{"size":258,"mtime":1691674697431,"results":"14","hashOfConfig":"15"},{"size":686,"mtime":1696013812305,"results":"16","hashOfConfig":"15"},{"size":1129,"mtime":1691675960549,"results":"17","hashOfConfig":"15"},{"size":781,"mtime":1691681108018,"results":"18","hashOfConfig":"15"},{"size":547,"mtime":1694707165492,"results":"19","hashOfConfig":"15"},{"size":2374,"mtime":1695141325022,"results":"20","hashOfConfig":"15"},{"size":3101,"mtime":1695221727057,"results":"21","hashOfConfig":"15"},{"size":2648,"mtime":1695227366544,"results":"22","hashOfConfig":"15"},{"size":2852,"mtime":1695910710867,"results":"23","hashOfConfig":"15"},{"size":1460,"mtime":1695906298144,"results":"24","hashOfConfig":"15"},{"size":2288,"mtime":1696013859330,"results":"25","hashOfConfig":"15"},{"size":1722,"mtime":1696014351868,"results":"26","hashOfConfig":"15"},{"size":2151,"mtime":1696015016105,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"npzir0",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"31"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"31"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"31"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"31"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\crudOperations\\frontend-apis\\src\\index.js",[],[],[],"D:\\crudOperations\\frontend-apis\\src\\App.js",["72","73","74","75","76","77","78","79","80","81"],[],"D:\\crudOperations\\frontend-apis\\src\\table\\table.js",[],[],"D:\\crudOperations\\frontend-apis\\src\\login\\login.js",[],[],"D:\\crudOperations\\frontend-apis\\src\\quiz\\quizData.js",[],[],"D:\\crudOperations\\frontend-apis\\src\\quiz\\QuizRecord.js",["82"],[],"import React, { useState } from \"react\";\r\n\r\nimport { quizData } from \"./quizData\";\r\n\r\nexport default function QuizRecord() {\r\n  const initialAnswers = Array(quizData.length).fill(\"\");\r\n  const [answer, setAnswer] = useState(initialAnswers);\r\n  const [score, setScore] = useState(0);\r\n  const [resultVisible, setResultVisible] = useState(false);\r\n\r\n  const changeEvent = (index, value) => {\r\n    const newdata = [...answer];\r\n    newdata[index] = value;\r\n    setAnswer(newdata);\r\n  };\r\n  const display = () => {\r\n    let userScore = 0;\r\n    quizData.map((item, index) => {\r\n      if (answer[index] === item.answer) {\r\n        userScore++;\r\n      }\r\n      setScore(userScore);\r\n      setResultVisible(true);\r\n    });\r\n    console.log(userScore);\r\n  };\r\n  const handleRestart = () => {\r\n    setAnswer(initialAnswers);\r\n    setScore(0);\r\n    setResultVisible(false);\r\n  };\r\n  return (\r\n    <div className=\"w-1/2 bg-slate-100 flex-col justify-center m-auto mt-8 rounded-md p-6\">\r\n      <div className=\"flex justify-center\">\r\n        <h1 className=\"text-blue-400 uppercase font-serif my-4 \">Quiz App</h1>\r\n      </div>\r\n      {quizData.map((item, index) => (\r\n        <div key={index}>\r\n          <p>{item.question}</p>\r\n          <input\r\n            className=\" bg-gray-50 border border-blue-400 text-blue-400  text-base rounded-md\"\r\n            type=\"text\"\r\n            value={answer[index]}\r\n            onChange={(e) => changeEvent(index, e.target.value)}\r\n          />\r\n          {resultVisible && (\r\n            <p className=\"text-red-500\">\r\n              {answer[index] === item.answer ? \"correct\" : item.answer}\r\n            </p>\r\n          )}\r\n        </div>\r\n      ))}\r\n      <div className=\"flex justify-center flex-col items-center\">\r\n        {resultVisible ? (\r\n          <div className=\"flex justify-center flex-col items-center w-full\">\r\n            <p className=\"text-lg font-sans\">Your score: {score}</p>\r\n            <button\r\n              className=\"bg-blue-500 text-white p-2 rounded-md my-4 w-full\"\r\n              onClick={handleRestart}\r\n            >\r\n              Restart\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <button\r\n            className=\"bg-blue-500 text-white p-2 rounded-md my-4 w-full\"\r\n            onClick={display}\r\n          >\r\n            Submit\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\crudOperations\\frontend-apis\\src\\quiz\\SecondQuiz.js",["83"],[],"import { useNavigate } from \"react-router-dom\";\r\nimport React, { useState } from \"react\";\r\nimport StartQuiz from \"./StartQuiz\";\r\n\r\nexport default function SecondQuiz() {\r\n  const [number, setNumber] = useState(\"\");\r\n  const [inputValues, setInputValues] = useState([]);\r\n  const [questionAnswer, setQuestionAnswer] = useState([]);\r\n  const navigate = useNavigate();\r\n  const onChange = (e) => {\r\n    setNumber(e.target.value);\r\n  };\r\n\r\n  const handleEvent = (evt, index) => {\r\n    setQuestionAnswer((prevQuestionAnswer) => {\r\n      const updatedQuestionAnswer = [...prevQuestionAnswer];\r\n      if (!updatedQuestionAnswer[index]) {\r\n        updatedQuestionAnswer[index] = { question: \"\", answer: \"\" };\r\n      }\r\n      updatedQuestionAnswer[index][evt.target.name] = evt.target.value;\r\n      return updatedQuestionAnswer;\r\n    });\r\n  };\r\n\r\n  const submit = () => {\r\n    const num = parseInt(number);\r\n    setNumber(num);\r\n    setInputValues(new Array(num).fill({ question: \"\", answer: \"\" }));\r\n  };\r\n\r\n  const addData = () => {\r\n    const dataString = JSON.stringify(questionAnswer);\r\n    navigate(`/start-quiz/${dataString}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-1/2 bg-slate-100 flex-col justify-center m-auto mt-8 rounded-md p-6\">\r\n      <div className=\"flex  justify-center\">\r\n        <h1 className=\" text-blue-500 text-lg\">Quiz App</h1>\r\n      </div>\r\n      <div className=\"flex justify-center mt-8\">\r\n        <input\r\n          className=\" bg-gray-50 border border-blue-400 text-blue-400  text-base rounded-md\"\r\n          type=\"number\"\r\n          value={number}\r\n          onChange={onChange}\r\n        />\r\n        <button\r\n          className=\"bg-blue-500 text-white text-base ml-4 rounded-md p-1\"\r\n          onClick={submit}\r\n        >\r\n          Enter No\r\n        </button>\r\n      </div>\r\n      {number && (\r\n        <div>\r\n          {inputValues?.map((value, index) => (\r\n            <div\r\n              className=\"flex flex-col justify-start border-b pb-6 border-black \"\r\n              key={index}\r\n            >\r\n              <label>Question</label>\r\n              <input\r\n                className=\" bg-gray-50 border border-blue-400 text-blue-400   rounded-md mt-2 text-lg\"\r\n                type=\"text\"\r\n                value={questionAnswer[index]?.question}\r\n                name=\"question\"\r\n                onChange={(e) => handleEvent(e, index)}\r\n              />\r\n              <label>Answer</label>\r\n              <input\r\n                className=\" bg-gray-50 border border-blue-400 text-blue-400   rounded-md mt-2 text-lg\"\r\n                type=\"text\"\r\n                value={questionAnswer[index]?.answer}\r\n                name=\"answer\"\r\n                onChange={(e) => handleEvent(e, index)}\r\n              />\r\n            </div>\r\n          ))}\r\n          <div className=\"flex flex-col justify-end mt-4\">\r\n            <button\r\n              className=\"bg-blue-500 text-white text-base  rounded-md p-1 \"\r\n              onClick={() => addData()}\r\n            >\r\n              Add Data\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","D:\\crudOperations\\frontend-apis\\src\\quiz\\StartQuiz.js",["84","85"],[],"import React, { useState } from \"react\";\r\nimport SecondQuiz from \"./SecondQuiz\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst StartQuiz = () => {\r\n  const { data } = useParams();\r\n  const questionAnswer = JSON.parse(data);\r\n  const initialAnswers = Array(questionAnswer.length).fill(\"\");\r\n  const [answers, setAnswers] = useState(initialAnswers);\r\n  const [score, setScore] = useState(0);\r\n  const [resultVisible, setResultVisible] = useState(false);\r\n\r\n  const changeEvent = (index, value) => {\r\n    const newData = [...answers];\r\n    newData[index] = value;\r\n    setAnswers(newData);\r\n  };\r\n  const submit = () => {\r\n    let userScore = 0;\r\n    questionAnswer.map((item, index) => {\r\n      if (answers[index] === item.answer) {\r\n        userScore++;\r\n      }\r\n      setScore(userScore);\r\n      setResultVisible(true);\r\n    });\r\n    console.log(userScore);\r\n  };\r\n  const handleRestart = () => {\r\n    setAnswers(initialAnswers);\r\n    setScore(0);\r\n    setResultVisible(false);\r\n  };\r\n  return (\r\n    <div className=\"w-1/2 bg-slate-100 flex-col justify-center m-auto mt-8 rounded-md p-6\">\r\n      <div className=\"justify-center flex\">\r\n        <h1 className=\"text-blue-400 uppercase font-serif my-4\">Start Quiz</h1>\r\n      </div>\r\n      {questionAnswer.map((item, index) => (\r\n        <div key={index}>\r\n          <strong>Question{index + 1}: </strong>\r\n          {item.question}\r\n          <div className=\"justify-center flex flex-col\">\r\n            <input\r\n              className=\" bg-gray-50 border border-blue-400 text-blue-400  text-base rounded-md\"\r\n              type=\"text\"\r\n              value={answers[index]}\r\n              onChange={(e) => changeEvent(index, e.target.value)}\r\n            />\r\n            {resultVisible && (\r\n              <p className=\"text-red-500\">\r\n                {answers[index] === item.answer ? \"correct\" : item.answer}\r\n              </p>\r\n            )}\r\n          </div>\r\n          <br />\r\n        </div>\r\n      ))}\r\n      <div>\r\n        {resultVisible ? (\r\n          <div className=\"flex flex-col justify-center items-center w-full\">\r\n            <p className=\"text-blue-400 font-serif\">Your Score: {score}</p>\r\n            <button\r\n              className=\"bg-blue-500 text-white p-2 rounded-md my-4 w-full\"\r\n              onClick={handleRestart}\r\n            >\r\n              Restart\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <button\r\n            className=\"bg-blue-500 text-white p-2 rounded-md my-4 w-full\"\r\n            onClick={submit}\r\n          >\r\n            Submit\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default StartQuiz;\r\n","D:\\crudOperations\\frontend-apis\\src\\pages\\Page.js",["86","87"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { PagesData } from \"./PagesData\";\r\n\r\nexport default function () {\r\n  const [arrayyears, setArrayyears] = useState([]);\r\n  const [selectedYear, setSelectedYear] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const uniqueYear = new Set();\r\n    const yearsArray = [];\r\n    for (let i = 0; i < PagesData?.length; i++) {\r\n      let values = PagesData[i]?.year;\r\n      if (values && !uniqueYear.has(values)) {\r\n        uniqueYear.add(values);\r\n        yearsArray.push(values);\r\n      }\r\n    }\r\n    setArrayyears(yearsArray);\r\n  }, []);\r\n\r\n  const handleYearButtonClick = (year) => {\r\n    setSelectedYear(year);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex bg-white justify-start flex-col divide-red-400  \">\r\n      <div className=\"flex flex-col justify-center items-center w-full m-auto  mt-4\">\r\n        <strong className=\"text-xl\">Our Milestones</strong>\r\n        <h1 className=\"mt-3\">\r\n          Our dream is to create an equal and barrier-free world with the power\r\n          to make\r\n          <h1 className=\"flex justify-center\">\r\n            every product and service technology\r\n          </h1>\r\n        </h1>\r\n        <p className=\"bg-black p-2 rounded-full mt-8\">\r\n          <div className=\"m-2\">\r\n            {arrayyears?.map((item, index) => (\r\n              <button\r\n                key={index}\r\n                className={\r\n                  \"text-white py-2 px-6 hover:bg-white hover:text-black rounded-full\"\r\n                }\r\n                onClick={() => handleYearButtonClick(item)}\r\n              >\r\n                {item}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </p>\r\n      </div>\r\n\r\n      {PagesData.map((item, index) => {\r\n        if (selectedYear === null || selectedYear === item.year) {\r\n          return (\r\n            <div key={index}>\r\n              <div className=\"flex justify-center items-center mx-20 mt-12\">\r\n                <div className=\"\">\r\n                  <img\r\n                    src={item.image}\r\n                    alt=\"Image\"\r\n                    className=\"w-32 h-32 rounded-full\"\r\n                  ></img>\r\n                </div>\r\n                <div className=\"ml-16\">\r\n                  <strong className=\"text-base\">{item.headimg}</strong>\r\n                  <h1 className=\"mt-2\">{item.detail}</h1>\r\n                  <strong className=\"text-black mt-2 underline\">\r\n                    Learn More\r\n                  </strong>\r\n                </div>\r\n                <div className=\"mt-10 ml-64\">\r\n                  <strong className=\"\">{item.year}</strong>\r\n                </div>\r\n              </div>\r\n              <hr className=\"h-px my-8 bg-gray-200 border-0 dark:bg-gray-700 mx-24\"></hr>\r\n            </div>\r\n          );\r\n        } else {\r\n          return null;\r\n        }\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n","D:\\crudOperations\\frontend-apis\\src\\pages\\PagesData.js",[],[],"D:\\crudOperations\\frontend-apis\\src\\initial-elements.js",[],[],"D:\\crudOperations\\frontend-apis\\src\\OverviewFlow.js",["88","89"],[],"D:\\crudOperations\\frontend-apis\\src\\CustomNode.jsx",["90","91"],[],{"ruleId":"92","severity":1,"message":"93","line":1,"column":27,"nodeType":"94","messageId":"95","endLine":1,"endColumn":33},{"ruleId":"92","severity":1,"message":"96","line":1,"column":35,"nodeType":"94","messageId":"95","endLine":1,"endColumn":41},{"ruleId":"92","severity":1,"message":"97","line":1,"column":43,"nodeType":"94","messageId":"95","endLine":1,"endColumn":48},{"ruleId":"92","severity":1,"message":"98","line":2,"column":8,"nodeType":"94","messageId":"95","endLine":2,"endColumn":13},{"ruleId":"92","severity":1,"message":"99","line":3,"column":8,"nodeType":"94","messageId":"95","endLine":3,"endColumn":13},{"ruleId":"92","severity":1,"message":"100","line":4,"column":8,"nodeType":"94","messageId":"95","endLine":4,"endColumn":18},{"ruleId":"92","severity":1,"message":"101","line":5,"column":8,"nodeType":"94","messageId":"95","endLine":5,"endColumn":18},{"ruleId":"92","severity":1,"message":"102","line":6,"column":8,"nodeType":"94","messageId":"95","endLine":6,"endColumn":17},{"ruleId":"92","severity":1,"message":"103","line":7,"column":8,"nodeType":"94","messageId":"95","endLine":7,"endColumn":12},{"ruleId":"92","severity":1,"message":"104","line":8,"column":8,"nodeType":"94","messageId":"95","endLine":8,"endColumn":24},{"ruleId":"105","severity":1,"message":"106","line":18,"column":32,"nodeType":"107","messageId":"108","endLine":18,"endColumn":34},{"ruleId":"92","severity":1,"message":"102","line":3,"column":8,"nodeType":"94","messageId":"95","endLine":3,"endColumn":17},{"ruleId":"92","severity":1,"message":"101","line":2,"column":8,"nodeType":"94","messageId":"95","endLine":2,"endColumn":18},{"ruleId":"105","severity":1,"message":"106","line":20,"column":38,"nodeType":"107","messageId":"108","endLine":20,"endColumn":40},{"ruleId":"109","severity":1,"message":"110","line":4,"column":1,"nodeType":"111","endLine":85,"endColumn":2},{"ruleId":"112","severity":1,"message":"113","line":59,"column":19,"nodeType":"114","endLine":63,"endColumn":20},{"ruleId":"92","severity":1,"message":"115","line":32,"column":17,"nodeType":"94","messageId":"95","endLine":32,"endColumn":25},{"ruleId":"116","severity":1,"message":"117","line":36,"column":5,"nodeType":"118","endLine":36,"endColumn":7,"suggestions":"119"},{"ruleId":"92","severity":1,"message":"120","line":62,"column":10,"nodeType":"94","messageId":"95","endLine":62,"endColumn":21},{"ruleId":"92","severity":1,"message":"121","line":68,"column":9,"nodeType":"94","messageId":"95","endLine":68,"endColumn":19},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Routes' is defined but never used.","'Route' is defined but never used.","'Table' is defined but never used.","'Login' is defined but never used.","'QuizRecord' is defined but never used.","'SecondQuiz' is defined but never used.","'StartQuiz' is defined but never used.","'Page' is defined but never used.","'ReactDraganddrop' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'setNodes' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'setEdges'. Either include it or remove the dependency array.","ArrayExpression",["122"],"'isModalOpen' is assigned a value but never used.","'closeModal' is assigned a value but never used.",{"desc":"123","fix":"124"},"Update the dependencies array to be: [setEdges]",{"range":"125","text":"126"},[835,837],"[setEdges]"]