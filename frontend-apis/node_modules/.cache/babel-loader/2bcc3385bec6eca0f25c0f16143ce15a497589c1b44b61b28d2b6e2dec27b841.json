{"ast":null,"code":"var _jsxFileName = \"D:\\\\crudOperations\\\\frontend-apis\\\\src\\\\quiz\\\\SecondQuiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SecondQuiz() {\n  _s();\n  const [numberOfFields, setNumberOfFields] = useState(1);\n  const [inputValues, setInputValues] = useState([\"\"]);\n  const handleInputChange = (event, index) => {\n    const newInputValues = [...inputValues];\n    newInputValues[index] = event.target.value;\n    setInputValues(newInputValues);\n  };\n  const addInputFields = () => {\n    const num = parseInt(numberOfFields, 10);\n    if (!isNaN(num) && num > 0) {\n      setNumberOfFields(num);\n      setInputValues(new Array(num).fill(\"\"));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dynamic Input Fields\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"numberOfFields\",\n      children: \"Enter a number:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      id: \"numberOfFields\",\n      value: numberOfFields,\n      onChange: event => setNumberOfFields(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addInputFields,\n      children: \"Generate Fields\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), inputValues.map((value, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: value,\n        onChange: event => handleInputChange(event, index)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(SecondQuiz, \"YFyBcreLkVuyLrMBKGrS+dqqh4E=\");\n_c = SecondQuiz;\nvar _c;\n$RefreshReg$(_c, \"SecondQuiz\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SecondQuiz","_s","numberOfFields","setNumberOfFields","inputValues","setInputValues","handleInputChange","event","index","newInputValues","target","value","addInputFields","num","parseInt","isNaN","Array","fill","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","onChange","onClick","map","_c","$RefreshReg$"],"sources":["D:/crudOperations/frontend-apis/src/quiz/SecondQuiz.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function SecondQuiz() {\r\n  const [numberOfFields, setNumberOfFields] = useState(1);\r\n  const [inputValues, setInputValues] = useState([\"\"]);\r\n\r\n  const handleInputChange = (event, index) => {\r\n    const newInputValues = [...inputValues];\r\n    newInputValues[index] = event.target.value;\r\n    setInputValues(newInputValues);\r\n  };\r\n\r\n  const addInputFields = () => {\r\n    const num = parseInt(numberOfFields, 10);\r\n    if (!isNaN(num) && num > 0) {\r\n      setNumberOfFields(num);\r\n      setInputValues(new Array(num).fill(\"\"));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Dynamic Input Fields</h1>\r\n      <label htmlFor=\"numberOfFields\">Enter a number:</label>\r\n      <input\r\n        type=\"number\"\r\n        id=\"numberOfFields\"\r\n        value={numberOfFields}\r\n        onChange={(event) => setNumberOfFields(event.target.value)}\r\n      />\r\n      <button onClick={addInputFields}>Generate Fields</button>\r\n\r\n      {inputValues.map((value, index) => (\r\n        <div key={index}>\r\n          <input\r\n            type=\"text\"\r\n            value={value}\r\n            onChange={(event) => handleInputChange(event, index)}\r\n          />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;EAEpD,MAAMS,iBAAiB,GAAGA,CAACC,KAAK,EAAEC,KAAK,KAAK;IAC1C,MAAMC,cAAc,GAAG,CAAC,GAAGL,WAAW,CAAC;IACvCK,cAAc,CAACD,KAAK,CAAC,GAAGD,KAAK,CAACG,MAAM,CAACC,KAAK;IAC1CN,cAAc,CAACI,cAAc,CAAC;EAChC,CAAC;EAED,MAAMG,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMC,GAAG,GAAGC,QAAQ,CAACZ,cAAc,EAAE,EAAE,CAAC;IACxC,IAAI,CAACa,KAAK,CAACF,GAAG,CAAC,IAAIA,GAAG,GAAG,CAAC,EAAE;MAC1BV,iBAAiB,CAACU,GAAG,CAAC;MACtBR,cAAc,CAAC,IAAIW,KAAK,CAACH,GAAG,CAAC,CAACI,IAAI,CAAC,EAAE,CAAC,CAAC;IACzC;EACF,CAAC;EAED,oBACElB,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7BvB,OAAA;MAAOwB,OAAO,EAAC,gBAAgB;MAAAL,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACvDvB,OAAA;MACEyB,IAAI,EAAC,QAAQ;MACbC,EAAE,EAAC,gBAAgB;MACnBd,KAAK,EAAET,cAAe;MACtBwB,QAAQ,EAAGnB,KAAK,IAAKJ,iBAAiB,CAACI,KAAK,CAACG,MAAM,CAACC,KAAK;IAAE;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5D,CAAC,eACFvB,OAAA;MAAQ4B,OAAO,EAAEf,cAAe;MAAAM,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAExDlB,WAAW,CAACwB,GAAG,CAAC,CAACjB,KAAK,EAAEH,KAAK,kBAC5BT,OAAA;MAAAmB,QAAA,eACEnB,OAAA;QACEyB,IAAI,EAAC,MAAM;QACXb,KAAK,EAAEA,KAAM;QACbe,QAAQ,EAAGnB,KAAK,IAAKD,iBAAiB,CAACC,KAAK,EAAEC,KAAK;MAAE;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtD;IAAC,GALMd,KAAK;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMV,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACrB,EAAA,CAzCuBD,UAAU;AAAA6B,EAAA,GAAV7B,UAAU;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}