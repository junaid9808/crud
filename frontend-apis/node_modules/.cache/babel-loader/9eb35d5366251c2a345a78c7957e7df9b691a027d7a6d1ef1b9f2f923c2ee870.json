{"ast":null,"code":"var _jsxFileName = \"D:\\\\crudOperations\\\\frontend-apis\\\\src\\\\quiz\\\\SecondQuiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SecondQuiz() {\n  _s();\n  const [numbers, setNumbers] = useState([]);\n  const [showNumbers, setShowNumbers] = useState(false);\n  const handleInputChange = (event, index) => {\n    const newNumbers = [...numbers];\n    newNumbers[index] = event.target.value;\n    setNumbers(newNumbers);\n  };\n  const addInputField = () => {\n    setNumbers([...numbers, \"\"]);\n  };\n  const showEnteredNumbers = () => {\n    setShowNumbers(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Number Input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), numbers.map((number, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: `numberInput${index}`,\n        children: \"Enter a Number:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: `numberInput${index}`,\n        value: number,\n        onChange: event => handleInputChange(event, index)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addInputField,\n      children: \"Add Input Field\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: showEnteredNumbers,\n      children: \"Show Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), showNumbers && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Entered Numbers:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: numbers.map((number, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: number\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(SecondQuiz, \"tLtDxKxYqPKGPYI6YlQKU204OVM=\");\n_c = SecondQuiz;\nvar _c;\n$RefreshReg$(_c, \"SecondQuiz\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SecondQuiz","_s","numbers","setNumbers","showNumbers","setShowNumbers","handleInputChange","event","index","newNumbers","target","value","addInputField","showEnteredNumbers","children","fileName","_jsxFileName","lineNumber","columnNumber","map","number","htmlFor","type","id","onChange","onClick","_c","$RefreshReg$"],"sources":["D:/crudOperations/frontend-apis/src/quiz/SecondQuiz.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function SecondQuiz() {\r\n  const [numbers, setNumbers] = useState([]);\r\n  const [showNumbers, setShowNumbers] = useState(false);\r\n\r\n  const handleInputChange = (event, index) => {\r\n    const newNumbers = [...numbers];\r\n    newNumbers[index] = event.target.value;\r\n    setNumbers(newNumbers);\r\n  };\r\n\r\n  const addInputField = () => {\r\n    setNumbers([...numbers, \"\"]);\r\n  };\r\n\r\n  const showEnteredNumbers = () => {\r\n    setShowNumbers(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Number Input</h1>\r\n      {numbers.map((number, index) => (\r\n        <div key={index}>\r\n          <label htmlFor={`numberInput${index}`}>Enter a Number:</label>\r\n          <input\r\n            type=\"number\"\r\n            id={`numberInput${index}`}\r\n            value={number}\r\n            onChange={(event) => handleInputChange(event, index)}\r\n          />\r\n        </div>\r\n      ))}\r\n      <button onClick={addInputField}>Add Input Field</button>\r\n      <button onClick={showEnteredNumbers}>Show Numbers</button>\r\n      {showNumbers && (\r\n        <div>\r\n          <h2>Entered Numbers:</h2>\r\n          <ul>\r\n            {numbers.map((number, index) => (\r\n              <li key={index}>{number}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}